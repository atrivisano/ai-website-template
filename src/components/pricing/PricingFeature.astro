---
/**
    * PricingFeature Component
    * Displays a single feature with included/excluded status
    */

export interface Props {
    text: string;
    included: boolean;
    useColor?: boolean;  // For cards that need different styling
    className?: string;
}

const {
    text,
    included,
    useColor = true,  // Default to using color
    className = ''
} = Astro.props;

// Icon classes for included vs excluded features
const iconClasses = useColor
    ? (included
        ? 'text-green-500 dark:text-green-400'
        : 'text-gray-300 dark:text-gray-600')
    : '';
---

<li class={`flex items-start ${className}`}>
    <span class={`flex-shrink-0 w-5 h-5 ${iconClasses} mr-2`}>
        {included ? (
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
            </svg>
        ) : (
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />
            </svg>
        )}
    </span>
    <span class={`${!included ? 'opacity-75' : ''}`}>{text}</span>
</li>